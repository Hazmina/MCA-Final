<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ExpenseTypeDataSet" targetNamespace="http://tempuri.org/ExpenseTypeDataSet.xsd" xmlns:mstns="http://tempuri.org/ExpenseTypeDataSet.xsd" xmlns="http://tempuri.org/ExpenseTypeDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="OMSConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="OMSConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.OAS.Properties.Settings.GlobalReference.Default.OMSConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ExpenseTypeTableAdapter" GeneratorDataComponentClassName="ExpenseTypeTableAdapter" Name="ExpenseType" UserDataComponentName="ExpenseTypeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="OMSConnectionString (Settings)" DbObjectName="OMS.dbo.ExpenseType" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ExpenseType] WHERE (([ExpTypeId] = @Original_ExpTypeId) AND ((@IsNull_ExpType = 1 AND [ExpType] IS NULL) OR ([ExpType] = @Original_ExpType)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ExpTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExpTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ExpType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExpType" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ExpType" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ExpType" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ExpenseType] ([ExpType]) VALUES (@ExpType);
SELECT ExpTypeId, ExpType FROM ExpenseType WHERE (ExpTypeId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ExpType" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ExpType" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ExpTypeId, ExpType FROM dbo.ExpenseType</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ExpenseType] SET [ExpType] = @ExpType WHERE (([ExpTypeId] = @Original_ExpTypeId) AND ((@IsNull_ExpType = 1 AND [ExpType] IS NULL) OR ([ExpType] = @Original_ExpType)));
SELECT ExpTypeId, ExpType FROM ExpenseType WHERE (ExpTypeId = @ExpTypeId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ExpType" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ExpType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ExpTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExpTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ExpType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExpType" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ExpType" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ExpType" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ExpTypeId" ColumnName="ExpTypeId" DataSourceName="OMS.dbo.ExpenseType" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ExpTypeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ExpTypeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ExpTypeId" DataSetColumn="ExpTypeId" />
              <Mapping SourceColumn="ExpType" DataSetColumn="ExpType" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="ExpenseTypeDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="ExpenseTypeDataSet" msprop:Generator_UserDSName="ExpenseTypeDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="ExpenseType" msprop:Generator_TableClassName="ExpenseTypeDataTable" msprop:Generator_TableVarName="tableExpenseType" msprop:Generator_TablePropName="ExpenseType" msprop:Generator_RowDeletingName="ExpenseTypeRowDeleting" msprop:Generator_RowChangingName="ExpenseTypeRowChanging" msprop:Generator_RowEvHandlerName="ExpenseTypeRowChangeEventHandler" msprop:Generator_RowDeletedName="ExpenseTypeRowDeleted" msprop:Generator_UserTableName="ExpenseType" msprop:Generator_RowChangedName="ExpenseTypeRowChanged" msprop:Generator_RowEvArgName="ExpenseTypeRowChangeEvent" msprop:Generator_RowClassName="ExpenseTypeRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ExpTypeId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnExpTypeId" msprop:Generator_ColumnPropNameInRow="ExpTypeId" msprop:Generator_ColumnPropNameInTable="ExpTypeIdColumn" msprop:Generator_UserColumnName="ExpTypeId" type="xs:int" />
              <xs:element name="ExpType" msprop:Generator_ColumnVarNameInTable="columnExpType" msprop:Generator_ColumnPropNameInRow="ExpType" msprop:Generator_ColumnPropNameInTable="ExpTypeColumn" msprop:Generator_UserColumnName="ExpType" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ExpenseType" />
      <xs:field xpath="mstns:ExpTypeId" />
    </xs:unique>
  </xs:element>
</xs:schema>